# Generated by Django 4.2.5 on 2025-10-05 16:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0009_subscription_completed_at_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='GalleryCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collected_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='GalleryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='作品标题')),
                ('description', models.TextField(verbose_name='作品描述')),
                ('coverImage', models.ImageField(blank=True, null=True, upload_to='gallery_covers/', verbose_name='封面图片')),
                ('workFile', models.FileField(upload_to='gallery_files/', verbose_name='作品文件(压缩包等)')),
                ('status', models.CharField(choices=[('draft', '草稿'), ('pending_review', '待审核'), ('published', '已发布'), ('rejected', '已驳回'), ('archived', '已归档')], default='draft', max_length=20, verbose_name='作品状态')),
                ('requiredPoints', models.PositiveIntegerField(default=0, verbose_name='所需积分')),
                ('version', models.CharField(blank=True, max_length=20, null=True, verbose_name='版本号')),
                ('rating', models.FloatField(default=0.0, verbose_name='平均评分')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_items_authored', to=settings.AUTH_USER_MODEL, verbose_name='作者')),
                ('collectors', models.ManyToManyField(blank=True, related_name='collected_gallery_items', through='api.GalleryCollection', to=settings.AUTH_USER_MODEL)),
                ('prerequisiteWork', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.galleryitem', verbose_name='往期版本')),
                ('tags', models.ManyToManyField(blank=True, to='api.tag', verbose_name='标签')),
            ],
        ),
        migrations.CreateModel(
            name='GalleryDownloadRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
                ('points_spent', models.PositiveIntegerField()),
                ('gallery_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.galleryitem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='gallerycollection',
            name='gallery_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.galleryitem'),
        ),
        migrations.AddField(
            model_name='gallerycollection',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='GalleryItemRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField()),
                ('rated_at', models.DateTimeField(auto_now_add=True)),
                ('gallery_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.galleryitem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'gallery_item')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='gallerycollection',
            unique_together={('user', 'gallery_item')},
        ),
    ]
