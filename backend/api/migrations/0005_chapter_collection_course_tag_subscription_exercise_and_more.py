# Generated by Django 4.2.5 on 2025-10-02 05:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0004_certificationrequest'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='章节标题')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='章节顺序')),
                ('videoUrl', models.URLField(blank=True, max_length=500, null=True, verbose_name='视频链接')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collected_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='课程标题')),
                ('description', models.TextField(verbose_name='课程描述')),
                ('coverImage', models.URLField(blank=True, max_length=500, null=True, verbose_name='封面图片URL')),
                ('pricePoints', models.PositiveIntegerField(default=0, verbose_name='所需积分')),
                ('status', models.CharField(choices=[('draft', '草稿'), ('pending_review', '待审核'), ('published', '已发布'), ('rejected', '已驳回')], default='draft', max_length=20, verbose_name='课程状态')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses_authored', to=settings.AUTH_USER_MODEL, verbose_name='作者')),
                ('collectors', models.ManyToManyField(blank=True, related_name='collected_courses', through='api.Collection', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('single-choice', '单选题'), ('multiple-choice', '多选题'), ('fill-in-the-blank', '填空题')], max_length=20, verbose_name='题目类型')),
                ('prompt', models.TextField(verbose_name='题干')),
                ('options', models.JSONField(blank=True, help_text='选择题的选项列表', null=True, verbose_name='选项')),
                ('answer', models.JSONField(verbose_name='答案')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='api.chapter', verbose_name='所属章节')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='subscribers',
            field=models.ManyToManyField(blank=True, related_name='subscribed_courses', through='api.Subscription', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='tags',
            field=models.ManyToManyField(blank=True, to='api.tag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='collection',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.course'),
        ),
        migrations.AddField(
            model_name='collection',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chapter',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='api.course', verbose_name='所属课程'),
        ),
        migrations.AlterUniqueTogether(
            name='collection',
            unique_together={('user', 'course')},
        ),
    ]
