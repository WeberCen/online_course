# docker-compose.yml

services:
  # 1. 数据库服务 (PostgreSQL)
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - "5432:5432"
    restart: unless-stopped

  # 2. 缓存与任务队列服务 (Redis)
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: unless-stopped

  # 3. 搜索引擎服务 (Elasticsearch)
  search:
    image: elasticsearch:8.9.2 # 使用一个具体的版本以保证兼容性
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false # 开发环境禁用安全认证，简化配置
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: unless-stopped

  # 4. 后端应用服务 (Django)
  backend:
    build:
      context: ./backend # Dockerfile 所在的路径
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 1 --reload
    volumes:
      - ./backend:/app # 将本地的 backend 代码同步到容器的 /app 目录
    ports:
      - "8000:8000"
    env_file:
      - ./.env # 加载环境变量文件
    depends_on: # 声明依赖关系，确保在 backend 启动前，db 和 redis 已启动
      - db
      - redis
      - search
    restart: unless-stopped

  # 5. Celery 异步任务处理服务
  celery_worker:
    build:
      context: ./backend
    command: celery -A config worker -l info
    volumes:
      - ./backend:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - backend
    restart: unless-stopped

volumes: # 声明所有需要持久化存储的卷
  postgres_data:
  elasticsearch_data: